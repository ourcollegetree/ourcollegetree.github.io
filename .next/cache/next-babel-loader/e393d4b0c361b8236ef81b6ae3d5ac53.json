{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Grid, Header, Divider, Menu, Image, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Axios from 'axios';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\n\nclass HeaderComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      name: '',\n      phone: '',\n      emailError: [],\n      nameError: [],\n      phoneError: [],\n      errors: []\n    };\n  }\n\n  render() {\n    const {\n      user,\n      isLoggedIn,\n      accessToken\n    } = this.props;\n    console.log(\"isloggedin\", isLoggedIn, accessToken);\n    return __jsx(\"div\", null, __jsx(Menu, {\n      inverted: true,\n      secondary: true\n    }, __jsx(Link, {\n      href: \"/\",\n      passHref: true\n    }, __jsx(Menu.Item, {\n      as: \"a\"\n    }, __jsx(Grid, null, __jsx(Image, {\n      src: \"/static/images/logo2.jpeg\",\n      size: \"tiny\"\n    })))), __jsx(Link, {\n      href: \"/\",\n      passHref: true\n    }, __jsx(\"a\", null, __jsx(Menu.Item, null, __jsx(\"p\", {\n      className: \"headerText\"\n    }, \"Home\")))), __jsx(Link, {\n      href: \"/about-us\",\n      passHref: true\n    }, __jsx(\"a\", null, __jsx(Menu.Item, null, __jsx(\"p\", {\n      className: \"headerText\"\n    }, \"About Us\")))), __jsx(Link, {\n      href: \"/contact-us\",\n      passHref: true\n    }, __jsx(\"a\", null, __jsx(Menu.Item, null, __jsx(\"p\", {\n      className: \"headerText\"\n    }, \"Contact Us\")))), __jsx(Menu.Menu, {\n      position: \"right\"\n    }, __jsx(Link, {\n      href: \"/login\",\n      passHref: true\n    }, __jsx(\"a\", null, __jsx(Menu.Item, null, __jsx(Button, {\n      primary: true,\n      basic: true\n    }, \"Login\")))), __jsx(Link, {\n      href: \"/sign-up\",\n      passHref: true\n    }, __jsx(\"a\", null, __jsx(Menu.Item, null, __jsx(Button, {\n      color: \"green\"\n    }, \"Get Started\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user: {\n      isLoggedIn,\n      user,\n      accessToken\n    }\n  } = state;\n  return {\n    isLoggedIn,\n    user,\n    accessToken\n  };\n};\n\nconst mapDispatchToProps = {};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderComp));","map":null,"metadata":{},"sourceType":"module"}