{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoggedIn: false,\n  accessToken: '',\n  userDetails: {}\n};\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    updateUser: (state, action) => _objectSpread({}, action.payload),\n    loginFailed: () => initialState\n  }\n});\nexport const {\n  updateUser,\n  loginFailed\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["D:/personal/Project/our-college-tree/components/user/LoginSlice.js"],"names":["createSlice","initialState","isLoggedIn","accessToken","userDetails","loginSlice","name","reducers","updateUser","state","action","payload","loginFailed","actions","reducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,UAAU,EAAE,KAAd;AAAqBC,EAAAA,WAAW,EAAE,EAAlC;AAAsCC,EAAAA,WAAW,EAAE;AAAnD,CAArB;AAEA,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,OADuB;AAE7BL,EAAAA,YAF6B;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,uBAAyBA,MAAM,CAACC,OAAhC,CADJ;AAERC,IAAAA,WAAW,EAAE,MAAOX;AAFZ;AAHmB,CAAD,CAA9B;AASA,OAAO,MAAM;AAAEO,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAA8BP,UAAU,CAACQ,OAA/C;AACP,eAAeR,UAAU,CAACS,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { isLoggedIn: false, accessToken: '', userDetails: {} };\r\n\r\nconst loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState,\r\n  reducers: {\r\n    updateUser: (state, action) => ({ ...action.payload }),\r\n    loginFailed: () => (initialState),\r\n  },\r\n});\r\n\r\nexport const { updateUser, loginFailed } = loginSlice.actions;\r\nexport default loginSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}