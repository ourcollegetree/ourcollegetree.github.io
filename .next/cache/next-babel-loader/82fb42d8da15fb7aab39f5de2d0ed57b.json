{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport { Image, Grid, Container, Input, Header, Divider, Form, Message } from 'semantic-ui-react';\nimport Api from '../../config/Api';\nimport { updateUser } from './LoginSlice';\nimport { setCookie } from '../../libs/cookies/cookieHelpers';\n\nvar Login = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Login, _React$PureComponent);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var _this$setState;\n\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      var nameErrors = \"\".concat(name, \"Errors\");\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, nameErrors, []), _defineProperty(_this$setState, \"errors\", []), _this$setState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      var _this$props$router = _this.props.router,\n          query = _this$props$router.query,\n          next = _this$props$router.query.next;\n      var updateUserAction = _this.props.updateUser;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      Axios.post(Api.userLogin, {\n        username: username,\n        password: password\n      }).then(function (_ref) {\n        var _ref$data = _ref.data,\n            key = _ref$data.key,\n            details = _ref$data.details;\n        console.log(\"key\", key);\n        setCookie(key);\n        updateUserAction({\n          isLoggedIn: true,\n          accessToken: key,\n          userDetails: details\n        });\n        Router.push('/');\n      })[\"catch\"](function (_ref2) {\n        var _ref2$response = _ref2.response,\n            data = _ref2$response.data,\n            status = _ref2$response.status,\n            statusText = _ref2$response.statusText;\n        console.log(\"login error\", data);\n      })[\"finally\"](function () {\n        _this.setState({\n          isLoading: false\n        });\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      username: '',\n      usernameErrors: [],\n      password: '',\n      passwordErrors: [],\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          isLoading = _this$state2.isLoading,\n          username = _this$state2.username,\n          password = _this$state2.password,\n          usernameErrors = _this$state2.usernameErrors,\n          passwordErrors = _this$state2.passwordErrors,\n          errors = _this$state2.errors;\n      return __jsx(\"div\", {\n        className: \"loginSignup\"\n      }, __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        }\n      }, __jsx(\"div\", {\n        style: {\n          width: '100%',\n          \"float\": 'right',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }\n      }, __jsx(Grid, {\n        centered: true\n      }, __jsx(Grid.Row, {\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 8,\n        computer: 16\n      }, __jsx(Header, {\n        color: \"yellow\",\n        as: \"h1\",\n        textAlign: \"center\"\n      }, \"Login\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: errors.length > 0,\n        loading: isLoading\n      }, __jsx(Form.Field, null, __jsx(\"lable\", {\n        style: {\n          color: \"yellow\"\n        }\n      }, \"Username\"), __jsx(Input, {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: this.onChange,\n        value: username,\n        error: usernameErrors.length ? usernameErrors.join() : null\n      })), __jsx(Form.Field, null, __jsx(\"lable\", {\n        style: {\n          color: \"yellow\"\n        }\n      }, \"Password\"), __jsx(Input, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.onChange,\n        value: password,\n        error: passwordErrors.length ? passwordErrors.join() : null\n      })), __jsx(Message, {\n        hidden: !errors.length,\n        error: true,\n        list: errors\n      }), __jsx(Form.Button, {\n        content: \"Log In\",\n        positive: true,\n        fluid: true\n      })))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 8,\n        computer: 8\n      }, __jsx(Divider, {\n        horizontal: true\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\"\n        }\n      }, \"Or\")), __jsx(Grid, {\n        columns: 1\n      }, __jsx(Grid.Column, null, __jsx(Header, {\n        as: \"h5\",\n        textAlign: \"center\"\n      }, __jsx(Link, {\n        href: \"/user/forgot-password\",\n        passHref: true\n      }, __jsx(\"a\", {\n        title: \"Forgot Password\"\n      }, \"Forgot Password?\")))))))))));\n    }\n  }]);\n\n  return Login;\n}(React.PureComponent);\n\nvar mapStateToProps = null;\nvar mapDispatchToProps = {\n  updateUser: updateUser\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":null,"metadata":{},"sourceType":"module"}