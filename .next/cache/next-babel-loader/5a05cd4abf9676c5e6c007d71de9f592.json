{"ast":null,"code":"var _jsxFileName = \"D:\\\\personal\\\\Project\\\\our-college-tree\\\\components\\\\user\\\\Login.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport { Image, Grid, Container, Input, Header, Divider, Form, Message } from 'semantic-ui-react';\nimport Api from '../../config/Api'; // import { updateUser } from './LoginSlice';\n\nimport { setCookie } from '../../libs/cookies/cookieHelpers';\n\nclass Login extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChange\", e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const nameErrors = `${name}Errors`;\n      this.setState({\n        [name]: value,\n        [nameErrors]: [],\n        errors: []\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        router: {\n          query,\n          query: {\n            next\n          }\n        }\n      } = this.props;\n      const {\n        updateUser: updateUserAction\n      } = this.props;\n      this.setState({\n        isLoading: true\n      });\n      Axios.post(Api.userLogin, {\n        email,\n        password\n      }).then(({\n        data: {\n          key,\n          details\n        }\n      }) => {\n        setCookie(key);\n        updateUserAction({\n          isLoggedIn: true,\n          accessToken: key,\n          userDetails: details\n        });\n        Router.push('/admin');\n      }).catch(({\n        response: {\n          data,\n          status,\n          statusText\n        }\n      }) => {\n        console.log(\"login error\", data);\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      email: '',\n      emailErrors: [],\n      password: '',\n      passwordErrors: [],\n      errors: []\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      email,\n      password,\n      emailErrors,\n      passwordErrors,\n      errors\n    } = this.state;\n    const buttonStatus = email.length > 0 && password.length > 0;\n    return __jsx(\"div\", {\n      className: \"loginSignup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: '100%',\n        float: 'right',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }\n    }, __jsx(Grid.Row, {\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 8,\n      computer: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      color: \"yellow\",\n      as: \"h1\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Login\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: errors.length > 0,\n      loading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(\"lable\", {\n      style: {\n        color: \"yellow\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Email Address\"), __jsx(Input, {\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Email Address\",\n      onChange: this.onChange,\n      value: email,\n      error: emailErrors.length ? emailErrors.join() : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 75\n      }\n    })), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, __jsx(\"lable\", {\n      style: {\n        color: \"yellow\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Password\"), __jsx(Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      value: password,\n      error: passwordErrors.length ? passwordErrors.join() : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })), __jsx(Message, {\n      hidden: !errors.length,\n      error: true,\n      list: errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Button, {\n      content: \"Log In\",\n      positive: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    })))), __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, __jsx(Divider, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 35\n      }\n    }, \"Or\")), __jsx(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(Header, {\n      as: \"h5\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: \"/user/forgot-password\",\n      passHref: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      title: \"Forgot Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 65\n      }\n    }, \"Forgot Password?\")))))))))));\n  }\n\n}\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = {\n  updateUser\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["D:/personal/Project/our-college-tree/components/user/Login.js"],"names":["React","Link","Router","withRouter","connect","Axios","Image","Grid","Container","Input","Header","Divider","Form","Message","Api","setCookie","Login","PureComponent","constructor","props","e","name","value","target","nameErrors","setState","errors","email","password","state","router","query","next","updateUser","updateUserAction","isLoading","post","userLogin","then","data","key","details","isLoggedIn","accessToken","userDetails","push","catch","response","status","statusText","console","log","finally","emailErrors","passwordErrors","render","buttonStatus","length","position","top","left","bottom","right","width","float","height","display","alignItems","justifyContent","onSubmit","color","onChange","join","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport Router, { withRouter } from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport {\r\n  Image, Grid, Container, Input, Header, Divider, Form, Message,\r\n} from 'semantic-ui-react';\r\n\r\nimport Api from '../../config/Api';\r\n// import { updateUser } from './LoginSlice';\r\n import { setCookie } from '../../libs/cookies/cookieHelpers';\r\n\r\n\r\nclass Login extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      email: '',\r\n      emailErrors: [],\r\n      password: '',\r\n      passwordErrors: [],\r\n      errors: [],\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const nameErrors = `${name}Errors`;\r\n    this.setState({ [name]: value, [nameErrors]: [], errors: [] });\r\n  }\r\n\r\n  onSubmit = () => {\r\n    const { email, password } = this.state;\r\n    const { router: { query, query: { next } } } = this.props;\r\n    const { updateUser: updateUserAction } = this.props;\r\n    this.setState({ isLoading: true });\r\n    Axios.post(Api.userLogin, { email, password })\r\n      .then(({ data: { key, details } }) => {\r\n        setCookie(key);\r\n        updateUserAction({ isLoggedIn: true, accessToken: key, userDetails: details });\r\n        Router.push('/admin');\r\n      })\r\n      .catch(({ response: { data, status, statusText } }) => {\r\n        console.log(\"login error\", data)})\r\n      .finally(() => { this.setState({ isLoading: false }); });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading, email, password, emailErrors, passwordErrors, errors,\r\n    } = this.state;\r\n    const buttonStatus = email.length > 0 && password.length > 0;\r\n\r\n    return (\r\n    <div className=\"loginSignup\">\r\n          <div style={{\r\n            position: 'absolute', top: 0, left: 0, bottom: 0, right: 0,\r\n          }}\r\n          >\r\n            <div style={{\r\n              width: '100%', float: 'right', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n            }}\r\n            >\r\n                   <Grid centered>\r\n          <Grid.Row verticalAlign=\"middle\">\r\n            <Grid.Column mobile={16} tablet={8} computer={16}>\r\n              <Header color=\"yellow\" as=\"h1\" textAlign=\"center\">Login</Header>\r\n              <Form onSubmit={this.onSubmit} error={errors.length > 0} loading={isLoading}>\r\n                <Form.Field>\r\n                    <lable style={{color: \"yellow\"}}>Email Address</lable><Input name=\"email\" type=\"text\" placeholder=\"Email Address\" onChange={this.onChange} value={email} error={emailErrors.length ? emailErrors.join() : null} /></Form.Field>\r\n                <Form.Field>\r\n                <lable style={{color: \"yellow\"}}>Password</lable>\r\n                    <Input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.onChange} value={password} error={passwordErrors.length ? passwordErrors.join() : null} /></Form.Field>\r\n                <Message hidden={!errors.length} error list={errors} />\r\n                <Form.Button content=\"Log In\" positive fluid></Form.Button>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column mobile={16} tablet={8} computer={8}>\r\n              <Divider horizontal><p style={{color: \"white\"}}>Or</p></Divider>\r\n              <Grid columns={1}>\r\n                <Grid.Column>\r\n                  <Header as=\"h5\" textAlign=\"center\">\r\n                    <Link href=\"/user/forgot-password\" passHref><a title=\"Forgot Password\">Forgot Password?</a></Link>\r\n                  </Header>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n            </div>\r\n            </div>\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = null;\r\nconst mapDispatchToProps = { \r\n    updateUser\r\n };\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n"]},"metadata":{},"sourceType":"module"}